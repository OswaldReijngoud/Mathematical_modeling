% 本文件是通过将指派问题转化为线性规划模型，并使用 MATLAB 的 linprog 函数求解的实现。下面从问题建模、代码细节到结果解读进行详细阐释：
% 一、问题背景：指派问题的线性规划建模
% 指派问题的核心是：将 n 个任务分配给 n 个执行者（如人、机器），每个任务仅由一人完成，每人仅完成一个任务，目标是使总 cost 最小。
% 为用线性规划描述该问题，需定义：
% 决策变量：x_ij（i=1,2,...,n；j=1,2,...,n），其中 x_ij=1 表示 “执行者 i 分配任务 j”，x_ij=0 表示不分配。
% 目标函数：min ΣΣ(c_ij * x_ij)，其中 c_ij 是执行者 i 完成任务 j 的 cost（即输入矩阵 C 的元素）。
% 约束条件：
% 每行和为 1：Σ(x_ij) = 1（每个执行者必须且只能分配 1 个任务）。
% 每列和为 1：Σ(x_ij) = 1（每个任务必须且只能被 1 个执行者完成）。
% 变量取值：x_ij ∈ {0,1}（0-1 整数约束）。

clear all
C=[2 15 13 4;10 4 14 15;9 14 16 13;7 8 11 9];% 成本矩阵（核心输入）根据具体问题修改
n=size(C,1);%计算C的行列数n
C=C(:);%计算目标函数系数，将矩阵C按列排成一个列向量即可。
A=[];B=[];%没有不等式约束
Ae=zeros(2*n,n^2);%计算等约束的系数矩阵a
for i=1:n
    for j=(i-1)*n+1:n*i
        Ae(i,j)=1;
    end
    for k=i:n:n^2
        Ae(n+i,k)=1;
    end
end
Be=ones(2*n,1);%等式约束右端项b
Xm=zeros(n^2,1);%决策变量下界Xm
XM=ones(n^2,1);%决策变量上界XM
[x,z]=linprog(C,A,B,Ae,Be,Xm,XM);%使用linprog求解
x=reshape(x,n,n);%将列向量x按列排成一个n阶方阵
disp('最优解矩阵为:');%输出指派方案和最优值
Assignment=round(x)%使用round进行四舍五入取整
disp('最优解为:');
z

%输出结果解释：
% 找到最优解。
% 
% 最优解矩阵为:
% 
% Assignment =
% 
% 0     0     0     1
% 0     1     0     0
% 1     0     0     0
% 0     0     1     0
% 
% （行：执行者
%   列：任务
% 第 1 行第 4 列的 1 表示：第 1 个执行者被分配到第 4 个任务
% 第 2 行第 2 列的 1 表示：第 2 个执行者被分配到第 2 个任务
% 第 3 行第 1 列的 1 表示：第 3 个执行者被分配到第 1 个任务
% 第 4 行第 3 列的 1 表示：第 4 个执行者被分配到第 3 个任务
% ）
% 最优解为:
% 
% z =
% 
% 28

